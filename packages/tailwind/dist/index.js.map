{"version":3,"sources":["../src/index.ts","../src/components/properties/OpacityInput.tsx","../src/components/properties/PaletteDropdown.tsx","../src/components/properties/HistogramResolutionInput.tsx","../src/components/actions/RangeAutoButton.tsx","../src/components/actions/RangeFullButton.tsx"],"names":["ThermalProvider","ThermalInstance","ThermalRegistryHistogram","ThermalRegistryRange","useSingleFileRegistry","useThermalRegistry","useOpacityInput","Input","jsx","OpacityInput","_a","_b","registry","type","props","__objRest","opacity","__spreadProps","__spreadValues","PaletteGgradientDisplay","useThermalManagerPaletteDrive","Button","Dropdown","DropdownItem","DropdownMenu","DropdownTrigger","useMemo","jsxs","PaletteDropdown","triggerButtonProps","context","items","key","palette","item","useHistogramResolutionInput","HistogramResolutionInput","resolution","useRangeButtonAuto","RangeAutoButton","color","variant","useRangeButtonFull","RangeFullButton"],"mappings":"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","sourcesContent":["import { ThermalProvider, ThermalInstance, ThermalRegistryHistogram, ThermalRegistryRange, useSingleFileRegistry, useThermalRegistry } from \"@labir/react-bridge\";\r\n\r\nimport { OpacityInput } from \"./components/properties/OpacityInput\";\r\nimport { PaletteDropdown } from \"./components/properties/PaletteDropdown\";\r\nimport { HistogramResolutionInput } from \"./components/properties/HistogramResolutionInput\";\r\nimport { RangeAutoButton } from \"./components/actions/RangeAutoButton\";\r\nimport { RangeFullButton } from \"./components/actions/RangeFullButton\";\r\n\r\n\r\n\r\nexport {\r\n\r\n    // Reexport core stuff that is necessary to go along with this package\r\n    ThermalProvider,\r\n    ThermalInstance,\r\n    ThermalRegistryHistogram,\r\n    ThermalRegistryRange,\r\n    useSingleFileRegistry,\r\n    useThermalRegistry,\r\n\r\n    OpacityInput,\r\n    HistogramResolutionInput,\r\n    PaletteDropdown,\r\n    RangeAutoButton,\r\n    RangeFullButton\r\n    \r\n\r\n}","\"use client\";\r\n\r\nimport { ThermalRegistry } from \"@labir/core\";\r\nimport { useOpacityInput } from \"@labir/react-bridge\";\r\nimport { Input, InputProps } from \"@nextui-org/react\";\r\n\r\ntype OpacityInputProps = InputProps & {\r\n  registry: ThermalRegistry;\r\n};\r\n\r\n/**\r\n * An input controlling opacity of a ThermalRegistry\r\n * @package `@labir/tailwind`\r\n */\r\nexport const OpacityInput: React.FC<OpacityInputProps> = ({\r\n  registry,\r\n  type = \"range\",\r\n  ...props\r\n}) => {\r\n  const opacity = useOpacityInput(registry);\r\n\r\n  return (\r\n    <Input\r\n      {...props}\r\n      value={opacity.opacity.value.toString()}\r\n      type={type}\r\n      onChange={opacity.onChange}\r\n      min={0}\r\n      max={1}\r\n      step={0.01}\r\n    />\r\n  );\r\n};\r\n","\"use client\";\r\n\r\nimport { ThermalPaletteType } from \"@labir/core\";\r\nimport {\r\n  PaletteGgradientDisplay,\r\n  useThermalManagerPaletteDrive\r\n} from \"@labir/react-bridge\";\r\nimport {\r\n  Button,\r\n  ButtonProps,\r\n  Dropdown,\r\n  DropdownItem,\r\n  DropdownItemProps,\r\n  DropdownMenu,\r\n  DropdownMenuProps,\r\n  DropdownProps,\r\n  DropdownTrigger,\r\n} from \"@nextui-org/react\";\r\nimport { useMemo } from \"react\";\r\n\r\ntype PaletteDropdownProps = {\r\n  triggerButtonProps?: ButtonProps;\r\n  dropdownProps?: DropdownProps;\r\n  dropdownItemProps?: DropdownItemProps;\r\n  dropdownMenuProps?: DropdownMenuProps<\r\n    {\r\n      key: string;\r\n    } & ThermalPaletteType\r\n  >;\r\n};\r\n\r\n/**\r\n * A palette dropdown\r\n * @package `@labir/tailwind`\r\n */\r\nexport const PaletteDropdown: React.FC<PaletteDropdownProps> = ({\r\n  triggerButtonProps = {\r\n    variant: \"bordered\",\r\n    color: \"default\"\r\n  },\r\n}) => {\r\n\r\n  const context = useThermalManagerPaletteDrive(\"wtf\");\r\n\r\n  const items = useMemo(\r\n    () =>\r\n      Object.entries(context.availablePalettes).map(([key, palette]) => ({\r\n        ...palette,\r\n        key: key,\r\n      })),\r\n    [context.availablePalettes]\r\n  );\r\n\r\n  return (\r\n    <Dropdown>\r\n      <DropdownTrigger>\r\n        <Button {...triggerButtonProps} className=\"bg-brimary-500\">\r\n          <PaletteGgradientDisplay {...context.palette} />\r\n        </Button>\r\n      </DropdownTrigger>\r\n      <DropdownMenu\r\n        aria-label=\"Thermal palette selection\"\r\n        items={items}\r\n        onAction={(key) => {\r\n          context.set( key )\r\n        }}\r\n      >\r\n        {(item) => {\r\n          return (\r\n            <DropdownItem key={item.key} textValue={item.name}>\r\n              <PaletteGgradientDisplay\r\n                name={item.name}\r\n                gradient={item.gradient}\r\n                pixels={item.pixels}\r\n              />\r\n            </DropdownItem>\r\n          );\r\n        }}\r\n      </DropdownMenu>\r\n    </Dropdown>\r\n  );\r\n};\r\n","\"use client\";\r\n\r\nimport { ThermalRegistry } from \"@labir/core\";\r\nimport { useHistogramResolutionInput } from \"@labir/react-bridge\";\r\nimport { Input, InputProps } from \"@nextui-org/react\";\r\n\r\ntype OpacityInputProps = InputProps & {\r\n    registry: ThermalRegistry\r\n}\r\n\r\n/**\r\n * An input controlling opacity of a ThermalRegistry\r\n * \r\n * @package `@labir/tailwind`\r\n */\r\nexport const HistogramResolutionInput: React.FC< OpacityInputProps > = ({\r\n    registry,\r\n    type=\"range\",\r\n    ...props\r\n}) => {\r\n\r\n    const resolution = useHistogramResolutionInput( registry );\r\n\r\n    return <Input \r\n        {...props}\r\n        value={resolution.internal.toString()}\r\n        type={type}\r\n        onChange={resolution.onChange}\r\n        onValueChange={resolution.onBlur}\r\n        min={2}\r\n        max={400}\r\n    />\r\n\r\n}","import { ThermalRegistry } from \"@labir/core\";\r\nimport { useRangeButtonAuto } from \"@labir/react-bridge\";\r\nimport { Button, ButtonProps } from \"@nextui-org/react\";\r\nimport React from \"react\";\r\n\r\ntype RangeButtonAutoProps = ButtonProps & {\r\n  registry: ThermalRegistry;\r\n};\r\n\r\n/**\r\n * Automatically adjust the range based on the current histogram\r\n * \r\n * @package `@labir/tailwind`\r\n */\r\nexport const RangeAutoButton: React.FC<RangeButtonAutoProps> = ({\r\n  registry,\r\n  color = \"default\",\r\n  variant = \"bordered\",\r\n  ...props\r\n}) => {\r\n  const context = useRangeButtonAuto(registry);\r\n\r\n  return (\r\n    <Button\r\n      {...props}\r\n      onClick={context.onClick}\r\n      color={color}\r\n      variant={variant}\r\n    >\r\n      Automatic range\r\n    </Button>\r\n  );\r\n};\r\n","import { ThermalRegistry } from \"@labir/core\";\r\nimport { useRangeButtonFull } from \"@labir/react-bridge\";\r\nimport { Button, ButtonProps } from \"@nextui-org/react\";\r\nimport React from \"react\";\r\n\r\ntype RangeButtonAutoProps = ButtonProps & {\r\n  registry: ThermalRegistry;\r\n};\r\n\r\n/**\r\n * Automatically adjust the range based on the current histogram\r\n * \r\n * @package `@labir/tailwind`\r\n */\r\nexport const RangeFullButton: React.FC<RangeButtonAutoProps> = ({\r\n  registry,\r\n  color = \"default\",\r\n  variant = \"bordered\",\r\n  ...props\r\n}) => {\r\n  const context = useRangeButtonFull(registry);\r\n\r\n  return (\r\n    <Button\r\n      {...props}\r\n      onClick={context.onClick}\r\n      color={color}\r\n      variant={variant}\r\n    >\r\n      Full range\r\n    </Button>\r\n  );\r\n};\r\n"]}