{"version":3,"sources":["../src/index.ts","../src/components/properties/OpacityInput.tsx","../src/components/properties/PaletteDropdown.tsx","../src/components/properties/HistogramResolutionInput.tsx"],"sourcesContent":["import { ThermalProvider, ThermalInstance, ThermalRegistryHistogram, ThermalRegistryRange, useSingleFileRegistry, useThermalRegistry } from \"@labir/react-bridge\";\r\n\r\nimport { OpacityInput } from \"./components/properties/OpacityInput\";\r\nimport { PaletteDropdown } from \"./components/properties/PaletteDropdown\";\r\nimport { HistogramResolutionInput } from \"./components/properties/HistogramResolutionInput\";\r\n\r\n\r\nexport {\r\n\r\n    // Reexport core stuff that is necessary to go along with this package\r\n    ThermalProvider,\r\n    ThermalInstance,\r\n    ThermalRegistryHistogram,\r\n    ThermalRegistryRange,\r\n    useSingleFileRegistry,\r\n    useThermalRegistry,\r\n\r\n    OpacityInput,\r\n    HistogramResolutionInput,\r\n    PaletteDropdown\r\n    \r\n\r\n}","\"use client\";\r\n\r\nimport { ThermalRegistry } from \"@labir/core\"\r\nimport { useOpacityInput } from \"@labir/react-bridge\"\r\nimport {Input, InputProps} from \"@nextui-org/react\"\r\n\r\ntype OpacityInputProps = InputProps & {\r\n    registry: ThermalRegistry\r\n}\r\n\r\n/**\r\n * An input controlling opacity of a ThermalRegistry\r\n * @package `@labir/tailwind`\r\n */\r\nexport const OpacityInput: React.FC< OpacityInputProps > = ({\r\n    registry,\r\n    type=\"range\",\r\n    ...props\r\n}) => {\r\n\r\n    const opacity = useOpacityInput( registry );\r\n\r\n    return <Input \r\n        {...props}\r\n        value={opacity.opacity.toString()}\r\n        type={type}\r\n        onChange={opacity.onChange}\r\n    />\r\n\r\n}","\"use client\";\r\n\r\nimport { ThermalPaletteType } from \"@labir/core\";\r\nimport {\r\n  PaletteGgradientDisplay,\r\n  useThermalContext,\r\n  useThermalManagerPaletteDrive,\r\n  useThermalObjectPurpose,\r\n} from \"@labir/react-bridge\";\r\nimport {\r\n  Button,\r\n  ButtonProps,\r\n  Dropdown,\r\n  DropdownItem,\r\n  DropdownItemProps,\r\n  DropdownMenu,\r\n  DropdownMenuProps,\r\n  DropdownProps,\r\n  DropdownTrigger,\r\n} from \"@nextui-org/react\";\r\nimport { useMemo } from \"react\";\r\n\r\ntype PaletteDropdownProps = {\r\n  triggerButtonProps?: ButtonProps;\r\n  dropdownProps?: DropdownProps;\r\n  dropdownItemProps?: DropdownItemProps;\r\n  dropdownMenuProps?: DropdownMenuProps<{\r\n    key: string\r\n  } & ThermalPaletteType>;\r\n};\r\n\r\n/** \r\n * A palette dropdown\r\n * @package `@labir/tailwind`\r\n */\r\nexport const PaletteDropdown: React.FC<PaletteDropdownProps> = ({\r\n  triggerButtonProps = {},\r\n  dropdownProps = {},\r\n  dropdownItemProps = {},\r\n  dropdownMenuProps,\r\n  // ...props\r\n}) => {\r\n  const manager = useThermalContext();\r\n\r\n  const purpose = useThermalObjectPurpose(manager, \"PaletteDropdown\", true);\r\n\r\n  const context = useThermalManagerPaletteDrive(purpose);\r\n\r\n  const items = useMemo(\r\n    () =>\r\n      Object.entries(context.availablePalettes).map(([key, palette]) => ({\r\n        ...palette,\r\n        key: key,\r\n      })),\r\n    [context.availablePalettes]\r\n  );\r\n\r\n  // const { items, ...wtf } = dropdownMenuProps;\r\n\r\n  return (\r\n    <Dropdown {...dropdownProps}>\r\n      <DropdownTrigger {...triggerButtonProps} as={Button}>\r\n        <PaletteGgradientDisplay {...context.palette} />\r\n      </DropdownTrigger>\r\n      <DropdownMenu\r\n        aria-label=\"Thermal palette selection\"\r\n        {...dropdownMenuProps}\r\n        items={items}\r\n      >\r\n        {(item) => {\r\n          return (\r\n            <DropdownItem key={item.key} {...dropdownItemProps}>\r\n              <PaletteGgradientDisplay\r\n                name={item.name}\r\n                gradient={item.gradient}\r\n                pixels={item.pixels}\r\n              />\r\n            </DropdownItem>\r\n          );\r\n        }}\r\n      </DropdownMenu>\r\n    </Dropdown>\r\n  );\r\n};\r\n","\"use client\";\r\n\r\nimport { ThermalRegistry } from \"@labir/core\"\r\nimport { useHistogramResolutionInput, useOpacityInput } from \"@labir/react-bridge\"\r\nimport {Input, InputProps} from \"@nextui-org/react\"\r\n\r\ntype OpacityInputProps = InputProps & {\r\n    registry: ThermalRegistry\r\n}\r\n\r\n/**\r\n * An input controlling opacity of a ThermalRegistry\r\n * @package `@labir/tailwind`\r\n */\r\nexport const HistogramResolutionInput: React.FC< OpacityInputProps > = ({\r\n    registry,\r\n    type=\"range\",\r\n    ...props\r\n}) => {\r\n\r\n    const resolution = useHistogramResolutionInput( registry );\r\n\r\n    return <Input \r\n        {...props}\r\n        value={resolution.internal.toString()}\r\n        type={type}\r\n        onChange={resolution.onChange}\r\n        onValueChange={resolution.onBlur}\r\n    />\r\n\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAA,uBAA4I;;;ACG5I,0BAAgC;AAChC,mBAAgC;AAkBrB;AARJ,IAAM,eAA8C,CAAC,OAItD;AAJsD,eACxD;AAAA;AAAA,IACA,OAAK;AAAA,EAhBT,IAc4D,IAGrD,kBAHqD,IAGrD;AAAA,IAFH;AAAA,IACA;AAAA;AAIA,QAAM,cAAU,qCAAiB,QAAS;AAE1C,SAAO;AAAA,IAAC;AAAA,qCACA,QADA;AAAA,MAEJ,OAAO,QAAQ,QAAQ,SAAS;AAAA,MAChC;AAAA,MACA,UAAU,QAAQ;AAAA;AAAA,EACtB;AAEJ;;;AC1BA,IAAAC,uBAKO;AACP,IAAAC,gBAUO;AACP,IAAAA,gBAAwB;AAwCpB,IAAAC,sBAAA;AAzBG,IAAM,kBAAkD,CAAC;AAAA,EAC9D,qBAAqB,CAAC;AAAA,EACtB,gBAAgB,CAAC;AAAA,EACjB,oBAAoB,CAAC;AAAA,EACrB;AAAA;AAEF,MAAM;AACJ,QAAM,cAAU,wCAAkB;AAElC,QAAM,cAAU,8CAAwB,SAAS,mBAAmB,IAAI;AAExE,QAAM,cAAU,oDAA8B,OAAO;AAErD,QAAM,YAAQ;AAAA,IACZ,MACE,OAAO,QAAQ,QAAQ,iBAAiB,EAAE,IAAI,CAAC,CAAC,KAAK,OAAO,MAAO,iCAC9D,UAD8D;AAAA,MAEjE;AAAA,IACF,EAAE;AAAA,IACJ,CAAC,QAAQ,iBAAiB;AAAA,EAC5B;AAIA,SACE,8CAAC,yDAAa,gBAAb,EACC;AAAA,iDAAC,gEAAoB,qBAApB,EAAwC,IAAI,sBAC3C,uDAAC,iEAA4B,QAAQ,QAAS,IAChD;AAAA,IACA;AAAA,MAAC;AAAA;AAAA,QACC,cAAW;AAAA,SACP,oBAFL;AAAA,QAGC;AAAA,QAEC,WAAC,SAAS;AACT,iBACE,6CAAC,6DAAgC,oBAAhC,EACC;AAAA,YAAC;AAAA;AAAA,cACC,MAAM,KAAK;AAAA,cACX,UAAU,KAAK;AAAA,cACf,QAAQ,KAAK;AAAA;AAAA,UACf,MALiB,KAAK,GAMxB;AAAA,QAEJ;AAAA;AAAA,IACF;AAAA,MACF;AAEJ;;;AChFA,IAAAC,uBAA6D;AAC7D,IAAAC,gBAAgC;AAkBrB,IAAAC,sBAAA;AARJ,IAAM,2BAA0D,CAAC,OAIlE;AAJkE,eACpE;AAAA;AAAA,IACA,OAAK;AAAA,EAhBT,IAcwE,IAGjE,kBAHiE,IAGjE;AAAA,IAFH;AAAA,IACA;AAAA;AAIA,QAAM,iBAAa,kDAA6B,QAAS;AAEzD,SAAO;AAAA,IAAC;AAAA,qCACA,QADA;AAAA,MAEJ,OAAO,WAAW,SAAS,SAAS;AAAA,MACpC;AAAA,MACA,UAAU,WAAW;AAAA,MACrB,eAAe,WAAW;AAAA;AAAA,EAC9B;AAEJ;","names":["import_react_bridge","import_react_bridge","import_react","import_jsx_runtime","import_react_bridge","import_react","import_jsx_runtime"]}